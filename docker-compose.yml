version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: filetransfer
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  web:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://postgres:postgres123@db:5432/filetransfer
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-secret-key-here
      - EMAIL_HOST_USER=fiee1213@outlook.com
      - EMAIL_HOST_PASSWORD=your-email-password
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 filetransfer.wsgi:application"

  celery:
    build: .
    volumes:
      - .:/app
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://postgres:postgres123@db:5432/filetransfer
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-secret-key-here
      - EMAIL_HOST_USER=fiee1213@outlook.com
      - EMAIL_HOST_PASSWORD=your-email-password
    depends_on:
      - db
      - redis
    command: celery -A filetransfer worker --loglevel=info

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - web

volumes:
  postgres_data:
  static_volume:
  media_volume: